/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Wallet, WalletInterface } from "../Wallet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "LogWhitdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawToWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6108b68061010d6000396000f3fe6080604052600436106100745760003560e01c8063853828b61161004e578063853828b6146100eb5780638da5cb5b14610102578063a433587b1461012d578063f2fde38b146101565761007b565b806312065fe0146100805780632e1a7d4d146100ab578063715018a6146100d45761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b5061009561017f565b6040516100a2919061056e565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd91906105ba565b610187565b005b3480156100e057600080fd5b506100e9610223565b005b3480156100f757600080fd5b50610100610237565b005b34801561010e57600080fd5b5061011761028f565b6040516101249190610628565b60405180910390f35b34801561013957600080fd5b50610154600480360381019061014f919061066f565b6102b8565b005b34801561016257600080fd5b5061017d600480360381019061017891906106af565b610387565b005b600047905090565b61018f61040b565b804710156101d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c990610739565b60405180910390fd5b6101da61028f565b73ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561021f573d6000803e3d6000fd5b5050565b61022b61040b565b6102356000610489565b565b61023f61040b565b61024761028f565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561028c573d6000803e3d6000fd5b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102c061040b565b80471015610303576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fa90610739565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610349573d6000803e3d6000fd5b507fbf8a82917fe5797445f36bb49b10abed4cff925026cb76ec5f9ddb8993473595308360405161037b929190610759565b60405180910390a15050565b61038f61040b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f6906107f4565b60405180910390fd5b61040881610489565b50565b61041361054d565b73ffffffffffffffffffffffffffffffffffffffff1661043161028f565b73ffffffffffffffffffffffffffffffffffffffff1614610487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047e90610860565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61056881610555565b82525050565b6000602082019050610583600083018461055f565b92915050565b600080fd5b61059781610555565b81146105a257600080fd5b50565b6000813590506105b48161058e565b92915050565b6000602082840312156105d0576105cf610589565b5b60006105de848285016105a5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610612826105e7565b9050919050565b61062281610607565b82525050565b600060208201905061063d6000830184610619565b92915050565b61064c81610607565b811461065757600080fd5b50565b60008135905061066981610643565b92915050565b6000806040838503121561068657610685610589565b5b60006106948582860161065a565b92505060206106a5858286016105a5565b9150509250929050565b6000602082840312156106c5576106c4610589565b5b60006106d38482850161065a565b91505092915050565b600082825260208201905092915050565b7f494e535546494349454e54455320464f4e444f53000000000000000000000000600082015250565b60006107236014836106dc565b915061072e826106ed565b602082019050919050565b6000602082019050818103600083015261075281610716565b9050919050565b600060408201905061076e6000830185610619565b61077b6020830184610619565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006107de6026836106dc565b91506107e982610782565b604082019050919050565b6000602082019050818103600083015261080d816107d1565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061084a6020836106dc565b915061085582610814565b602082019050919050565b600060208201905081810360008301526108798161083d565b905091905056fea2646970667358221220822de18d5e8240fb85781457d03114acf4386bb08880c867bd6f71a9869e68f764736f6c634300080b0033";

export class Wallet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Wallet> {
    return super.deploy(overrides || {}) as Promise<Wallet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Wallet {
    return super.attach(address) as Wallet;
  }
  connect(signer: Signer): Wallet__factory {
    return super.connect(signer) as Wallet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WalletInterface {
    return new utils.Interface(_abi) as WalletInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Wallet {
    return new Contract(address, _abi, signerOrProvider) as Wallet;
  }
}
